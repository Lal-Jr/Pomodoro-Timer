{"version":3,"sources":["Components/Options/Options.styles.jsx","Components/Options/Options.components.jsx","Components/Time/Time.styles.jsx","Components/Time/Time.components.jsx","Components/Controls/Controls.styles.jsx","Components/Controls/Controls.components.jsx","Components/Pomodoro/Pomodoro.styles.jsx","Components/Pomodoro/Pomodoro.components.jsx","App.js","index.js"],"names":["OptionsContainer","styled","div","Option","OptionWrapper","Value","Clicker","span","Options","handleBreakDecrement","handleBreakIncrement","breakLength","handleSessionDecrement","handleSessionIncrement","sessionLength","onClick","TimeContainer","Label","h3","Timer","Minutes","h1","Seconds","Time","minute","second","timeLabel","ControlsContainer","Button","Controls","setIsActive","setCounter","setSecond","setMinute","isActive","setSessionLength","setTimeLabel","PomodoroContainer","Title","Pomodoro","useState","setBreakLength","counter","useEffect","intervalId","setInterval","secondCounter","minuteCounter","Math","floor","computedSecond","String","length","computedMinute","console","log","clearInterval","prevBreakLength","prevSessionLength","prevMinute","prevCounter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.494d15c3.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const OptionsContainer = styled.div`\r\n\theight: 15%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-evenly;\r\n\talign-items: center;\r\n\tcolor: #fff;\r\n\r\n\t@media (max-width: 420px) {\r\n\t\theight: 20%;\r\n\t}\r\n`;\r\n\r\nexport const Option = styled.div`\r\n\tmargin-inline: 70px;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\r\n\t@media (max-width: 600px) {\r\n\t\tmargin-inline: 30px;\r\n\t}\r\n\r\n\t@media (max-width: 420px) {\r\n\t\tmargin-inline: 15px;\r\n\t}\r\n`;\r\n\r\nexport const OptionWrapper = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmargin: 10px 0;\r\n`;\r\n\r\nexport const Value = styled.div`\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\tbackground: #fff;\r\n\tcolor: #000;\r\n\theight: 50px;\r\n\twidth: 50px;\r\n\tborder-radius: 50%;\r\n\tmargin-inline: 20px;\r\n\tfont-size: 20px;\r\n\tfont-weight: bold;\r\n\tuser-select: none;\r\n`;\r\n\r\nexport const Clicker = styled.span`\r\n\tfont-size: 35px;\r\n\tfont-weight: bold;\r\n\tcursor: pointer;\r\n\tcolor: #000;\r\n\tuser-select: none;\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n\tOptionsContainer,\r\n\tOption,\r\n\tOptionWrapper,\r\n\tValue,\r\n\tClicker,\r\n} from \"./Options.styles\";\r\n\r\nconst Options = ({\r\n\thandleBreakDecrement,\r\n\thandleBreakIncrement,\r\n\tbreakLength,\r\n\thandleSessionDecrement,\r\n\thandleSessionIncrement,\r\n\tsessionLength,\r\n}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<OptionsContainer>\r\n\t\t\t\t<Option>\r\n\t\t\t\t\t<OptionWrapper>\r\n\t\t\t\t\t\t<h2>Break Length</h2>\r\n\t\t\t\t\t</OptionWrapper>\r\n\t\t\t\t\t<OptionWrapper>\r\n\t\t\t\t\t\t<Clicker onClick={handleBreakDecrement}>-</Clicker>\r\n\t\t\t\t\t\t<Value>{breakLength}</Value>\r\n\t\t\t\t\t\t<Clicker onClick={handleBreakIncrement}>+</Clicker>\r\n\t\t\t\t\t</OptionWrapper>\r\n\t\t\t\t</Option>\r\n\t\t\t\t<Option>\r\n\t\t\t\t\t<OptionWrapper>\r\n\t\t\t\t\t\t<h2>Session Length</h2>\r\n\t\t\t\t\t</OptionWrapper>\r\n\t\t\t\t\t<OptionWrapper>\r\n\t\t\t\t\t\t<Clicker onClick={handleSessionDecrement}>-</Clicker>\r\n\t\t\t\t\t\t<Value>{sessionLength}</Value>\r\n\t\t\t\t\t\t<Clicker onClick={handleSessionIncrement}>+</Clicker>\r\n\t\t\t\t\t</OptionWrapper>\r\n\t\t\t\t</Option>\r\n\t\t\t</OptionsContainer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Options;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TimeContainer = styled.div`\r\n\theight: 40%;\r\n\tmin-width: 20%;\r\n\tborder-radius: 50%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tcolor: #fff;\r\n\tborder: 2px solid #fff;\r\n\r\n\t@media (max-width: 1200px) {\r\n\t\theight: 35%;\r\n\t\tmin-width: 25%;\r\n\t}\r\n\t@media (max-width: 1000px) {\r\n\t\theight: 40%;\r\n\t\tmin-width: 35%;\r\n\t}\r\n\t@media (max-width: 800px) {\r\n\t\theight: 30%;\r\n\t\tmin-width: 35%;\r\n\t}\r\n\r\n\t@media (max-width: 600px) {\r\n\t\theight: 25%;\r\n\t\tmin-width: 35%;\r\n\t}\r\n\r\n\t@media (max-width: 450px) {\r\n\t\theight: 27.5%;\r\n\t\tmin-width: 50%;\r\n\t}\r\n`;\r\n\r\nexport const Label = styled.h3`\r\n\tfont-size: 36px;\r\n\r\n\t@media (max-width: 1200px) {\r\n\t\tfont-size: 30px;\r\n\t}\r\n\t@media (max-width: 600px) {\r\n\t\tfont-size: 20px;\r\n\t}\r\n`;\r\n\r\nexport const Timer = styled.div`\r\n\tfont-size: 56px;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\r\n\t@media (max-width: 1200px) {\r\n\t\tfont-size: 48px;\r\n\t}\r\n\t@media (max-width: 800px) {\r\n\t\tfont-size: 36px;\r\n\t}\r\n\t@media (max-width: 600px) {\r\n\t\tfont-size: 28px;\r\n\t}\r\n\t@media (max-width: 400px) {\r\n\t\tfont-size: 18px;\r\n\t}\r\n`;\r\n\r\nexport const Minutes = styled.h1``;\r\n\r\nexport const Seconds = styled.h1``;\r\n","import React from \"react\";\r\nimport { TimeContainer, Label, Timer, Minutes, Seconds } from \"./Time.styles\";\r\n\r\nconst Time = ({ minute, second, timeLabel }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TimeContainer>\r\n\t\t\t\t<Label>{timeLabel}</Label>\r\n\t\t\t\t<Timer>\r\n\t\t\t\t\t<Minutes>{minute}</Minutes>:<Seconds>{second}</Seconds>\r\n\t\t\t\t</Timer>\r\n\t\t\t</TimeContainer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Time;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ControlsContainer = styled.div`\r\n\theight: 15%;\r\n\twidth: 20%;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tcolor: #fff;\r\n\r\n\t@media (max-width: 1200px) {\r\n\t\twidth: 30%;\r\n\t}\r\n\r\n\t@media (max-width: 768px) {\r\n\t\twidth: 40%;\r\n\t}\r\n\r\n\t@media (max-width: 400px) {\r\n\t\twidth: 60%;\r\n\t}\r\n`;\r\n\r\nexport const Button = styled.div`\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\tbackground: transparent;\r\n\tmin-width: 100px;\r\n\tpadding: 10px 20px;\r\n\tborder: 3px solid #000;\r\n\tborder-radius: 50px;\r\n\tfont-size: 24px;\r\n\tcursor: pointer;\r\n\tuser-select: none;\r\n\r\n\t@media (max-width: 768px) {\r\n\t\tfont-size: 18px;\r\n\t\tpadding: 7.5px 15px;\r\n\t\tmin-width: 50px;\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport { ControlsContainer, Button } from \"./Controls.styles\";\r\n\r\nconst Controls = ({\r\n\tsetIsActive,\r\n\tsetCounter,\r\n\tsetSecond,\r\n\tsetMinute,\r\n\tisActive,\r\n\tsetSessionLength,\r\n\tsetTimeLabel,\r\n}) => {\r\n\tconst resetTimer = () => {\r\n\t\tsetIsActive(false);\r\n\t\tsetCounter(1500);\r\n\t\tsetSecond(\"00\");\r\n\t\tsetMinute(25);\r\n\t\tsetSessionLength(25);\r\n\t\tsetTimeLabel(\"Session\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ControlsContainer>\r\n\t\t\t<Button onClick={() => setIsActive(!isActive)}>\r\n\t\t\t\t{isActive ? \"Stop\" : \"Start\"}\r\n\t\t\t</Button>\r\n\t\t\t<Button onClick={() => resetTimer()}>Reset</Button>\r\n\t\t</ControlsContainer>\r\n\t);\r\n};\r\n\r\nexport default Controls;\r\n","import styled from \"styled-components\";\r\n\r\nexport const PomodoroContainer = styled.div`\r\n\theight: 100vh;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\tbackground: linear-gradient(\r\n\t\t90deg,\r\n\t\trgba(48, 16, 255, 1) 0%,\r\n\t\trgba(100, 115, 255, 1) 100%\r\n\t);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n\tdisplay: grid;\r\n\tplace-items: center;\r\n\theight: 15%;\r\n\tcolor: #fff;\r\n\ttext-transform: uppercase;\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Options from \"../Options/Options.components\";\r\nimport Time from \"../Time/Time.components\";\r\nimport Controls from \"../Controls/Controls.components\";\r\nimport { PomodoroContainer, Title } from \"./Pomodoro.styles\";\r\n\r\nconst Pomodoro = () => {\r\n\t// const url = \"https://goo.gl/65cBl1\";\r\n\t// const audioBeep = new Audio(url);\r\n\r\n\tconst [breakLength, setBreakLength] = useState(5);\r\n\tconst [sessionLength, setSessionLength] = useState(25);\r\n\tconst [second, setSecond] = useState(\"00\");\r\n\tconst [minute, setMinute] = useState(25);\r\n\tconst [isActive, setIsActive] = useState(false);\r\n\tconst [counter, setCounter] = useState(60);\r\n\tconst [timeLabel, setTimeLabel] = useState(\"Session\");\r\n\r\n\tconst handleBreakIncrement = () => {\r\n\t\tif (breakLength < 30 && !isActive) {\r\n\t\t\tsetBreakLength((prevBreakLength) => prevBreakLength + 1);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSessionIncrement = () => {\r\n\t\tif (sessionLength < 60 && !isActive) {\r\n\t\t\tsetSessionLength((prevSessionLength) => prevSessionLength + 1);\r\n\t\t\tsetMinute((prevMinute) => prevMinute + 1);\r\n\t\t\tsetCounter((prevCounter) => prevCounter + 60);\r\n\t\t\tconsole.log(minute);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleBreakDecrement = () => {\r\n\t\tif (breakLength > 1 && !isActive) {\r\n\t\t\tsetBreakLength((prevBreakLength) => prevBreakLength - 1);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleSessionDecrement = () => {\r\n\t\tif (sessionLength > 1 && !isActive) {\r\n\t\t\tsetSessionLength((prevSessionLength) => prevSessionLength - 1);\r\n\t\t\tsetMinute((prevMinute) => prevMinute - 1);\r\n\t\t\tsetCounter((prevCounter) => prevCounter - 60);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tlet intervalId;\r\n\r\n\t\tif (isActive) {\r\n\t\t\tintervalId = setInterval(() => {\r\n\t\t\t\tconst secondCounter = counter % 60;\r\n\t\t\t\tconst minuteCounter = Math.floor(counter / 60);\r\n\r\n\t\t\t\tconst computedSecond =\r\n\t\t\t\t\tString(secondCounter).length === 1\r\n\t\t\t\t\t\t? `0${secondCounter}`\r\n\t\t\t\t\t\t: secondCounter;\r\n\t\t\t\tconst computedMinute =\r\n\t\t\t\t\tString(minuteCounter).length === 1\r\n\t\t\t\t\t\t? `0${minuteCounter}`\r\n\t\t\t\t\t\t: minuteCounter;\r\n\r\n\t\t\t\tsetSecond(computedSecond);\r\n\t\t\t\tsetMinute(computedMinute);\r\n\r\n\t\t\t\tcounter > -1 && setCounter((counter) => counter - 1);\r\n\r\n\t\t\t\tif (counter === 0) {\r\n\t\t\t\t\t// audioBeep.play();\r\n\t\t\t\t\tconsole.log(\"Audio Will Play Here\");\r\n\t\t\t\t} else if (counter === -1) {\r\n\t\t\t\t\tif (timeLabel === \"Session\") {\r\n\t\t\t\t\t\tsetTimeLabel(\"Break\");\r\n\t\t\t\t\t\tsetCounter(breakLength * 60);\r\n\t\t\t\t\t\tsetSecond(\"00\");\r\n\t\t\t\t\t\tsetMinute(`0${breakLength}`);\r\n\t\t\t\t\t} else if (timeLabel === \"Break\") {\r\n\t\t\t\t\t\tsetTimeLabel(\"Session\");\r\n\t\t\t\t\t\tsetCounter(sessionLength * 60);\r\n\t\t\t\t\t\tsetSecond(\"00\");\r\n\t\t\t\t\t\tsetMinute(`0${sessionLength}`);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, 1000);\r\n\t\t}\r\n\r\n\t\treturn () => clearInterval(intervalId);\r\n\t}, [isActive, counter, timeLabel, breakLength, sessionLength]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<PomodoroContainer>\r\n\t\t\t\t<Title>Pomodoro Timer</Title>\r\n\t\t\t\t<Options\r\n\t\t\t\t\thandleBreakDecrement={handleBreakDecrement}\r\n\t\t\t\t\thandleBreakIncrement={handleBreakIncrement}\r\n\t\t\t\t\tbreakLength={breakLength}\r\n\t\t\t\t\thandleSessionDecrement={handleSessionDecrement}\r\n\t\t\t\t\thandleSessionIncrement={handleSessionIncrement}\r\n\t\t\t\t\tsessionLength={sessionLength}\r\n\t\t\t\t/>\r\n\t\t\t\t<Time second={second} minute={minute} timeLabel={timeLabel} />\r\n\t\t\t\t<Controls\r\n\t\t\t\t\tsetIsActive={setIsActive}\r\n\t\t\t\t\tsetCounter={setCounter}\r\n\t\t\t\t\tsetSecond={setSecond}\r\n\t\t\t\t\tsetMinute={setMinute}\r\n\t\t\t\t\tisActive={isActive}\r\n\t\t\t\t\tsetSessionLength={setSessionLength}\r\n\t\t\t\t\tsetTimeLabel={setTimeLabel}\r\n\t\t\t\t/>\r\n\t\t\t</PomodoroContainer>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Pomodoro;\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport Pomodoro from \"./Components/Pomodoro/Pomodoro.components\";\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Pomodoro />\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}